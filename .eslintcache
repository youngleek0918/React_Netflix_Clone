[{"/Users/kayounglee/Desktop/project/react/netflix-clone/src/index.js":"1","/Users/kayounglee/Desktop/project/react/netflix-clone/src/App.js":"2","/Users/kayounglee/Desktop/project/react/netflix-clone/src/reportWebVitals.js":"3","/Users/kayounglee/Desktop/project/react/netflix-clone/src/Row.js":"4","/Users/kayounglee/Desktop/project/react/netflix-clone/src/requests.js":"5","/Users/kayounglee/Desktop/project/react/netflix-clone/src/axios.js":"6","/Users/kayounglee/Desktop/project/react/netflix-clone/src/Banner.js":"7","/Users/kayounglee/Desktop/project/react/netflix-clone/src/Nav.js":"8"},{"size":500,"mtime":1610584877754,"results":"9","hashOfConfig":"10"},{"size":907,"mtime":1610689548907,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1610584877755,"results":"12","hashOfConfig":"10"},{"size":1964,"mtime":1610767261158,"results":"13","hashOfConfig":"10"},{"size":712,"mtime":1610590281248,"results":"14","hashOfConfig":"10"},{"size":254,"mtime":1610590301107,"results":"15","hashOfConfig":"10"},{"size":1790,"mtime":1610686292431,"results":"16","hashOfConfig":"10"},{"size":987,"mtime":1610689892244,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"73o90b",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},"/Users/kayounglee/Desktop/project/react/netflix-clone/src/index.js",[],["37","38"],"/Users/kayounglee/Desktop/project/react/netflix-clone/src/App.js",[],"/Users/kayounglee/Desktop/project/react/netflix-clone/src/reportWebVitals.js",[],"/Users/kayounglee/Desktop/project/react/netflix-clone/src/Row.js",[],"/Users/kayounglee/Desktop/project/react/netflix-clone/src/requests.js",[],"/Users/kayounglee/Desktop/project/react/netflix-clone/src/axios.js",[],"/Users/kayounglee/Desktop/project/react/netflix-clone/src/Banner.js",["39"],"import React, { useEffect, useState } from 'react'\nimport axios from './axios';\nimport requests from \"./requests\";\nimport \"./Banner.css\"\nimport Row from './Row';\n\nfunction Banner() {\n    const [movie, setMovie] = useState([]);\n\n    useEffect(() => {\n        async function fetchData() {\n            const request = await axios.get(requests.fetchNetflixOriginals)\n            setMovie(\n                request.data.results[\n                Math.floor(Math.random() * request.data.results.length - 1)\n                ]\n            );\n            // console.log(request);\n            return request\n        }\n        fetchData();\n    }, []);\n\n    console.log(movie);\n\n    function truncate(str, n) {\n        return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\n    }\n\n    return (\n        <header className=\"banner\"\n            style={{\n                backgroundSize: \"cover\",\n                backgroundImage: `url(\n            \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\n            )`,\n                backgroundPosition: \"center center\",\n            }}\n        >\n            <div className=\"banner__contents\">\n                <h1 className=\"banner__title\">\n                    {movie?.title || movie?.name || movie?.original_name}\n                </h1>\n\n                <div className=\"banner__buttons\">\n                    <button className=\"banner__button\">Play</button>\n                    <button className=\"banner__button\">My List</button>\n                </div>\n\n                <h1 className=\"banner__description\">\n                    {/* {movie?.overview} */}\n                    {truncate(movie?.overview, 150)}\n                </h1>\n            </div>\n\n            <div className=\"banner__fadeBottom\" />\n        </header>\n    )\n}\n\nexport default Banner\n","/Users/kayounglee/Desktop/project/react/netflix-clone/src/Nav.js",["40"],"import React, { useEffect, handleShow, useState } from \"react\";\nimport './Nav.css';\n\nfunction Nav() {\n    const [show, handleShow] = useState(false);\n\n    // 스크롤 감지\n    useEffect(() => {\n        window.addEventListener(\"scroll\", () => {\n            if (window.scrollY > 100) {\n                handleShow(true);\n            } else handleShow(false);\n        });\n        return () => {\n            window.removeEventListener(\"scroll\");\n        };\n    }, []);\n\n    return (\n        <div className={`nav ${show && \"nav__black\"}`}>\n            <img\n                className=\"nav__logo\"\n                src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\"\n                alt=\"Netflix Logo\"\n            />\n            <img\n                className=\"nav__avatar\"\n                src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\"\n                alt=\"Netflix Logo\"\n            />\n        </div>\n    )\n}\n\nexport default Nav",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":5,"column":8,"nodeType":"47","messageId":"48","endLine":5,"endColumn":11},{"ruleId":"45","severity":1,"message":"49","line":1,"column":28,"nodeType":"47","messageId":"48","endLine":1,"endColumn":38},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'handleShow' is defined but never used.","no-global-assign","no-unsafe-negation"]